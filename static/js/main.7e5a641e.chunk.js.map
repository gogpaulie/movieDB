{"version":3,"sources":["components/Header.js","components/Movie.js","components/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","searchMovies","id","onSubmit","e","preventDefault","target","value","className","type","placeholder","Movie","vote","movieTitle","posterPath","overview","voteAverage","src","alt","MovieList","movies","map","movie","title","poster_path","vote_average","App","useState","setMovies","API_URL","getMovies","url","a","fetch","res","json","data","results","useEffect","searchTerm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA2BeA,MAzBf,YAAmC,IAAjBC,EAAgB,EAAhBA,aAMhB,OACE,iCACE,sBAAMC,GAAG,OAAOC,SAPpB,SAAsBC,GACpBA,EAAEC,iBACFJ,EAAaG,EAAEE,OAAO,GAAGC,QAKvB,SACE,sBAAKC,UAAU,aAAf,UACE,uBACEC,KAAK,OACLC,YAAY,mBACZR,GAAG,SACHM,UAAU,WAEZ,wBAAQA,UAAU,gBAAgBC,KAAK,SAAvC,SACE,mBAAGD,UAAU,4BCWVG,MA5Bf,YAAmE,IAGzCC,EAHTC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAajD,OACE,sBAAKR,UAAU,QAAf,UACE,qBAAKS,IAAG,UAdO,oCAcP,OAAkBH,GAAcI,IAAI,KAC5C,sBAAKV,UAAU,aAAf,UACE,6BAAKK,IACL,sBAAML,WAfYI,EAecI,EAdhCJ,GAAQ,EACH,QACEA,GAAQ,EACV,SAEA,OASL,SAA+CI,OAEjD,sBAAKR,UAAU,WAAf,UACE,0CACCO,SCHMI,MAlBf,YAAgC,IAAXC,EAAU,EAAVA,OACnB,OACE,sBAAMZ,UAAU,OAAhB,SACGY,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAEET,WAAYS,EAAMC,MAClBT,WAAYQ,EAAME,YAClBR,YAAaM,EAAMG,aACnBV,SAAUO,EAAMP,UAJXO,EAAMpB,UC0BRwB,MA9Bf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNP,EADM,KACEQ,EADF,KAGPC,EAAO,sHAHA,SAeEC,EAfF,8EAeb,WAAyBC,GAAzB,iBAAAC,EAAA,6DACEJ,EAAU,IADZ,SAEoBK,MAAMF,GAF1B,cAEQG,EAFR,gBAGqBA,EAAIC,OAHzB,OAGQC,EAHR,OAIER,EAAUQ,EAAKC,SAJjB,4CAfa,sBAsBb,OAXAC,qBAAU,WACRR,EAAUD,KACT,CAACA,IAUF,gCACE,cAAC,EAAD,CAAQ5B,aAjBZ,SAAsBsC,GACpBT,EAHc,6FAGSS,MAiBrB,cAAC,EAAD,CAAWnB,OAAQA,QClBVoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e5a641e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header({ searchMovies }) {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    searchMovies(e.target[0].value);\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <form id='form' onSubmit={handleSubmit}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Search movies...'\r\n            id='search'\r\n            className='search'\r\n          />\r\n          <button className='search-button' type='submit'>\r\n            <i className='fas fa-search'></i>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Movie({ movieTitle, posterPath, overview, voteAverage }) {\r\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/w1280';\r\n\r\n  function getClassByRate(vote) {\r\n    if (vote >= 8) {\r\n      return 'green';\r\n    } else if (vote >= 5) {\r\n      return 'orange';\r\n    } else {\r\n      return 'red';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='movie'>\r\n      <img src={`${IMAGE_PATH}${posterPath}`} alt='' />\r\n      <div className='movie-info'>\r\n        <h3>{movieTitle}</h3>\r\n        <span className={getClassByRate(voteAverage)}>{voteAverage}</span>\r\n      </div>\r\n      <div className='overview'>\r\n        <h3>Overview</h3>\r\n        {overview}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport Movie from './Movie';\r\n\r\nfunction MovieList({ movies }) {\r\n  return (\r\n    <main className='main'>\r\n      {movies.map((movie) => {\r\n        return (\r\n          <Movie\r\n            key={movie.id}\r\n            movieTitle={movie.title}\r\n            posterPath={movie.poster_path}\r\n            voteAverage={movie.vote_average}\r\n            overview={movie.overview}\r\n          />\r\n        );\r\n      })}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport MovieList from './components/MovieList';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  const API_URL = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=5d7ce722259d9a0eedf605443e5cc999&page=1`;\n\n  const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=5d7ce722259d9a0eedf605443e5cc999&query=\"`;\n\n  function searchMovies(searchTerm) {\n    getMovies(SEARCH_API + searchTerm);\n  }\n\n  useEffect(() => {\n    getMovies(API_URL);\n  }, [API_URL]);\n\n  async function getMovies(url) {\n    setMovies([]);\n    const res = await fetch(url);\n    const data = await res.json();\n    setMovies(data.results);\n  }\n\n  return (\n    <div>\n      <Header searchMovies={searchMovies} />\n      <MovieList movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}